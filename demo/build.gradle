description = "Monash University spring boot saml2 sp demo for google appengine"

version = "v1-snapshot"

buildscript {
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.google.cloud.tools:appengine-gradle-plugin:+")
		classpath("io.spring.gradle:propdeps-plugin:+")
	}
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
}

configurations.all {
	exclude group: 'org.slf4j', module: 'jul-to-slf4j'
}

apply plugin: 'propdeps'
apply plugin: "war"
apply plugin: "org.springframework.boot"

dependencies {

	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	compile("org.springframework.boot:spring-boot-configuration-processor")
	compile group: 'com.googlecode.objectify', name: 'objectify', version: '6.0'
    compile project(":monash-spring-boot-sso")
}

war.dependsOn(":monash-spring-saml-sp-demo-front:buildFront")

task prebuild(type: Copy) {
    from "${project.projectDir}/src/main/resources/profiles/${project.environment}/appengine-web.xml"
    into "${project.projectDir}/src/main/webapp/WEB-INF/"
}
prebuild.execute();

apply plugin: "com.google.cloud.tools.appengine"

appengine {

	deploy {   // deploy configuration
		stopPreviousVersion = true  // default - stop the current version
		promote = true              // default - & make this the current version
		project = "${this.project.name}-${this.project.environment}"
		version = "${this.project.version}"
	}
}

task postClean(type: Copy) {
	from "${project.projectDir}/src/main/resources/profiles/local/appengine-web.xml"
	into "${project.projectDir}/src/main/webapp/WEB-INF/"
}
clean.finalizedBy(":monash-spring-saml-sp-demo:postClean")